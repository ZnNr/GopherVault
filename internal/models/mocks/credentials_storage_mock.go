// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/ZnNr/GopherVault/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// CredentialsStorage is an autogenerated mock type for the CredentialsStorage type
type CredentialsStorage struct {
	mock.Mock
}

// DeleteCredentials provides a mock function with given fields: ctx, credentialsRequest
func (_m *CredentialsStorage) DeleteCredentials(ctx context.Context, credentialsRequest models.Credentials) error {
	ret := _m.Called(ctx, credentialsRequest)

	if len(ret) == 0 {
		panic("no return value specified for DeleteCredentials")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, models.Credentials) error); ok {
		r0 = rf(ctx, credentialsRequest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetCredentials provides a mock function with given fields: ctx, credentialsRequest
func (_m *CredentialsStorage) GetCredentials(ctx context.Context, credentialsRequest models.Credentials) ([]models.Credentials, error) {
	ret := _m.Called(ctx, credentialsRequest)

	if len(ret) == 0 {
		panic("no return value specified for GetCredentials")
	}

	var r0 []models.Credentials
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, models.Credentials) ([]models.Credentials, error)); ok {
		return rf(ctx, credentialsRequest)
	}
	if rf, ok := ret.Get(0).(func(context.Context, models.Credentials) []models.Credentials); ok {
		r0 = rf(ctx, credentialsRequest)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Credentials)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, models.Credentials) error); ok {
		r1 = rf(ctx, credentialsRequest)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveCredentials provides a mock function with given fields: ctx, credentialsRequest
func (_m *CredentialsStorage) SaveCredentials(ctx context.Context, credentialsRequest models.Credentials) error {
	ret := _m.Called(ctx, credentialsRequest)

	if len(ret) == 0 {
		panic("no return value specified for SaveCredentials")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, models.Credentials) error); ok {
		r0 = rf(ctx, credentialsRequest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateCredentials provides a mock function with given fields: ctx, credentials
func (_m *CredentialsStorage) UpdateCredentials(ctx context.Context, credentials models.Credentials) error {
	ret := _m.Called(ctx, credentials)

	if len(ret) == 0 {
		panic("no return value specified for UpdateCredentials")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, models.Credentials) error); ok {
		r0 = rf(ctx, credentials)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCredentialsStorage creates a new instance of CredentialsStorage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCredentialsStorage(t interface {
	mock.TestingT
	Cleanup(func())
}) *CredentialsStorage {
	mock := &CredentialsStorage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
